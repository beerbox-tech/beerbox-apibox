name: "pull-request"
on:
  pull_request:
    branches:
      - "main"
env:
  REGISTRY_HOSTNAME: "${{ secrets.REGISTRY_HOSTNAME }}"
  REGISTRY_USERNAME: "${{ secrets.REGISTRY_USERNAME }}"
  REGISTRY_PASSWORD: "${{ secrets.REGISTRY_PASSWORD }}"
jobs:
  lint:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v2"
      - name: "Setup python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.10"
      - name: "Lint codebase"
        uses: "pre-commit/action@v2.0.3"
  unit-tests:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v2"
      - name: "Setup python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.10"
      - name: "Setup poetry"
        uses: "snok/install-poetry@v1"
      - name: "Restore cache"
        uses: "actions/cache@v2"
        with:
          path: "~/.cache/pypoetry/virtualenvs/"
          key: "poetry-${{ hashFiles('**/poetry.lock') }}"
      - name: "Install dependencies"
        run: "make init"
      - name: "Run unit tests and code coverage"
        run: "make tests-unit"
  integration-tests:
    runs-on: "ubuntu-latest"
    env:
      POSTGRES_USERNAME: "test"
      POSTGRES_PASSWORD: "test"
      POSTGRES_DATABASE: "test"
      POSTGRES_HOST: "localhost"
      POSTGRES_PORT: "5432"
    services:
      postgres:
        image: "postgres:14.2"
        env:
          POSTGRES_USER: "test"
          POSTGRES_PASSWORD: "test"
          POSTGRES_DB: "test"
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - "5432:5432"
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v2"
      - name: "Setup python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.10"
      - name: "Setup poetry"
        uses: "snok/install-poetry@v1"
      - name: "Restore cache"
        uses: "actions/cache@v2"
        with:
          path: "~/.cache/pypoetry/virtualenvs/"
          key: "poetry-${{ hashFiles('**/poetry.lock') }}"
      - name: "Install dependencies"
        run: "make init"
      - name: "Run integration tests and code coverage"
        run: "make tests-integration"
